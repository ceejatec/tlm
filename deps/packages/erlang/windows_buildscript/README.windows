Currently the Windows build is not integrated into the cbdeps system fully.
However we have a job which will generally build it successfully:

http://server.jenkins.couchbase.com/job/cbdeps-erlang-window-build/

Commit your local change to tlm and push it to your own fork on GitHub,
then run this job.

Rest of this file is mostly for historical information:

We have an ansible playbook setup for window2016 to build Erlang R20
https://github.com/couchbase/build-infra/tree/master/ansible/windows/erlang

Following are steps to build Erlang R20 on window2016 VM
1. Start up a zz-Windows-2016-Ansible-Template
2. Installed a downloaded version of OpenSSL 1.0.2r (current versios of now) from http://slproweb.com/products/Win32OpenSSL.html (Win64 OpenSSL v1.0.2r)
3. Install the downloaded .exe from step 2 to C:\OpenSSL-Win64
4. To build manually on the VM (the following build steps should be done inside cygwin terminal)
    a. Copy the 'cygwin.bash_profile' from https://github.com/couchbase/tlm/blob/master/deps/packages/erlang/windows_buildscript/cygwin.bash_profile
    b. Copy the scripts 'erlang-windows.sh' from https://github.com/couchbase/tlm/blob/master/deps/packages/erlang/windows_buildscript/erlang_windows.sh.  Some changes might need to be made for the tarball naming and version, so review it carefully.
    c. Ensure https://github.com/couchbasedeps/erlang has the correct/latest tags required for the build
    d. cd /home/Administrator/; mkdir workspace
    e. git clone git://github.com/couchbasedeps/erlang opt_src_OTP-20.3.8.11
    f. cd opt_src_OTP-20.3.8.11; git checkout OTP-20.3.8.11
    g. ../erlang_windows.sh 9.3.3.5 20 OTP-20.3.8.11 (see http://server.jenkins.couchbase.com/view/cbdeps/job/cbdeps-erlang-window-build for reference)

If successful, a '.tgz' file should be at the top-level of the homedir,
which can then be copied into place in the releases directory on latest-
builds.
